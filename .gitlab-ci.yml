stages:
  - build
  - test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  PYTHON_IMAGE: $CI_REGISTRY_IMAGE:latest

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - docker info  # debug
    - docker build -t $PYTHON_IMAGE .
    - docker push $PYTHON_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - changes:
      - pyproject.toml
      - Dockerfile
      - poetry.lock

build-jinko-env:
  stage: test
  tags: [ nix ]
  script:
    # will populate the nix binary cache
    - nix build .#jinkoEnv

build-jinko-env-big:
  stage: test
  tags: [ nix ]
  script:
    # will populate the nix binary cache
    - nix build .#jinkoEnvBig
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: manual

pytest:
  stage: test
  image: $PYTHON_IMAGE
  before_script:
    - poetry install
    - cp $envrc_testing_preprod ./.envrc
  script:
    - poetry run pytest tests --cov

pypi_deploy:
  stage: deploy
  image: $PYTHON_IMAGE
  before_script:
    - poetry install
  script:
    - poetry config pypi-token.pypi "$PYPI_TOKEN"
    # Extract the version number from pyproject.toml
    - VERSION=$(poetry version -s)
    # Check if the version already exists on PyPI for jinko-sdk using the HTTP status code
    - response=$(curl -s -o /dev/null -w "%{http_code}" https://pypi.org/pypi/jinko-sdk/$VERSION/json)
    - if [ "$response" -eq 200 ]; then echo "Version $VERSION already exists on PyPI. Skipping deployment."; exit 0; fi
    - poetry publish --build
  environment:
    name: production
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

# deactivated, because there are no interactive doc now, only dummy examples
# doctest:
#   stage: test
#  image: $PYTHON_IMAGE
#   before_script:
#     - poetry install
#   script:
#     - poetry install
#     - poetry run pytest jinko_helpers --doctest-modules
